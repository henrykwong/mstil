% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mstil.R
\name{fit.fmmstil}
\alias{fit.fmmstil}
\title{This function finds the penalised quasi likelihood estiamtes for finite mixture of mstil via EM.}
\usage{
fit.fmmstil(
  x,
  K,
  omega,
  lambda,
  delta,
  Ainv,
  nu,
  init.cluster,
  init.method,
  sgd.step.size = 0.01,
  sgd.dim.rate = 0.01,
  sgd.iter = 100,
  sgd.tol = 1e-05,
  sample.mc = 10000,
  maxit.bfgs = 10,
  maxit.qmle = 1,
  maxit = 1000,
  convergence.n = 5,
  sample.logL = 1e+06,
  lambda.penalty = 0,
  print.progress = TRUE
)
}
\arguments{
\item{x}{a n x k matrix, representing n k-variate samples.}

\item{K}{a positive integer, number of clusters.}

\item{omega}{a positive numeric vector of length K, where sum of the vector equals to 1.}

\item{lambda}{list of K numeric skewing matrices of size k x p.}

\item{delta}{list of K numeric vectors of length k, representing the location parameter.}

\item{Ainv}{list of lower triangular numeric matrices of size k x k, where t(Ainv) "times" Ainv representing the inverse of the scale parameter.}

\item{nu}{list of positive values representing the degree of freedom.}

\item{init.cluster}{initial cluster to help set initial parameters}

\item{init.method}{method to find initial parameters.}

\item{sgd.step.size}{a positive value representing the step size used in fitting nu. By default 0.1.}

\item{sgd.dim.rate}{a non-negative value representing the step size diminishing rate used in fitting nu. By default 0.01.}

\item{sgd.iter}{a positive integer representing the number of iterations used in fitting nu. By default 100.}

\item{sgd.tol}{a positive value, representing the finite difference tolerance for gradient estimations.}

\item{sample.mc}{a positive integer, representing the number of monte carlo samples used in the quasi log-likelihood function. By default 10000.}

\item{maxit.bfgs}{a positive integer, representing the maximum number of iterations used in the QMLE step. By default 10.}

\item{maxit.qmle}{a positive integer, representing the number of iteration within each M-step.}

\item{maxit}{a positive integer, representing the maximum number of iterations. By default 1000.}

\item{convergence.n}{a positive integer, the algorithm stops when estimated log-likelihood does not increase in "convergence.n" consecutive iterations. By default 5.}

\item{sample.logL}{a positive integer, representing the number of monte carlo samples used to estimate the current log-likelihood. By default 1000000.}

\item{lambda.penalty}{a non-negative value, representing the parameter of the penalty term. By default 0.}

\item{print.progress}{a logical value. If TRUE, progress of the algorithm will be printed in console. By default TRUE.}
}
\value{
a list with components:
\item{logL}{a vector of the estimated log-likelihood function after each itereation.}
\item{par}{a list of list of fitted parameters after each iteration. Within each list, "lambda" is the fitted skewing matrix, "delta" is the location parameter, "Ainv" is the reparameterised scale parameter, "nu" is the degree of freedom.}
\item{time}{a non-negative numeric vector, records the time elapsed after each iteration.}
}
\description{
This function finds the penalised quasi likelihood estiamtes for finite mixture of mstil via EM.
}
\examples{
# Not run:
}
