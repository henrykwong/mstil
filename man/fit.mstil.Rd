% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mstil.R
\name{fit.mstil}
\alias{fit.mstil}
\title{This function finds the penalised quasi likelihood estiamtes for mstil.}
\usage{
fit.mstil(
  x,
  lambda,
  delta,
  Ainv,
  nu,
  step.size = 0.1,
  dim.rate = 0.01,
  iter.sgd = 100,
  tol.sgd = 1e-05,
  sample.mc = 10000,
  maxit.bfgs = 10,
  maxit = 1000,
  convergence.n = 5,
  sample.logL = 1e+06,
  q = 0.95,
  max.lambda = Inf,
  lambda.penalty = 0,
  print.progress = TRUE
)
}
\arguments{
\item{x}{a n x k matrix, representing n k-variate samples.}

\item{lambda}{a numeric skewing matrix of size k x p.}

\item{delta}{a numeric vector of length k, representing the location parameter.}

\item{Ainv}{an lower triangular numeric matrix of size k x k, where t(Ainv) "times" Ainv representing the inverse of the scale parameter.}

\item{nu}{a positive value representing the degree of freedom/}

\item{step.size}{a positive value representing the step size used in fitting nu. By default 0.1.}

\item{dim.rate}{a non-negative value representing the step size diminishing rate used in fitting nu. By default 0.01.}

\item{iter.sgd}{a positive integer representing the number of iterations used in fitting nu. By default 100.}

\item{tol.sgd}{a positive value, representing the finite difference tolerance for gradient estimations.}

\item{sample.mc}{a positive integer, representing the number of monte carlo samples used in the quasi log-likelihood function. By default 10000.}

\item{maxit.bfgs}{a positive integer, representing the maximum number of iterations used in the QMLE step. By default 10.}

\item{maxit}{a positive integer, representing the maximum number of iterations. By default 1000.}

\item{convergence.n}{a positive integer, the algorithm stops when estimated log-likelihood does not increase in "convergence.n" consecutive iterations. By default 5.}

\item{sample.logL}{a positive integer, representing the number of monte carlo samples used to estimate the current log-likelihood. By default 1000000.}

\item{q}{a value in range (0.5,1), representing the 2-sided confidence interval percentage. By default 0.95.}

\item{max.lambda}{positive value, representign the maximum lambda accepted.}

\item{lambda.penalty}{a non-negative value, representing the parameter of the penalty term. By default 0.}

\item{print.progress}{a logical value. If TRUE, progress of the algorithm will be printed in console. By default TRUE.}
}
\value{
a list with components:
\item{logL}{a vector of the estimated log-likelihood function after each itereation.}
\item{par}{a list of list of fitted parameters after each iteration. Within each list, "lambda" is the fitted skewing matrix, "delta" is the location parameter, "Ainv" is the reparameterised scale parameter, "nu" is the degree of freedom.}
\item{logL.lower}{a numeric vector of the lower bound of the estimated log-likelihood function after each iteration.}
\item{logL.upper}{a numeric vector of the upper bound of the estimated log-likelihood function after each iteration.}
\item{fun.value}{a numeric vector of the fitted penalised quasi log-likelihood function at each iteration.}
\item{time}{a non-negative numeric vector, records the time elapsed after each iteration.}
}
\description{
This function finds the penalised quasi likelihood estiamtes for mstil.
}
\examples{
# Not run:
# fit.mstil(log(RiverFlow))
}
