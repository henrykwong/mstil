% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.mstil.R
\name{fit.mstil}
\alias{fit.mstil}
\title{This function finds the maximum penalised quasi likelihood estiamtes for mstil.}
\usage{
fit.mstil(x, param, show.progress = TRUE, control = list())
}
\arguments{
\item{x}{matrix of quantiles of size n x k. Each row is taken as a quantile.}

\item{param}{list of inital parameters, contains lambda, delta, Ainv, and nu.}

\item{show.progress}{logical value. If TRUE, progress of the algorithm will be printed in console. By default TRUE.}

\item{control}{list of control variables, see 'details'.}
}
\value{
a list with components:
\item{logLik}{a vector of estimated values of the log-likelihood function after each itereation.}
\item{par}{a list of lists of fitted parameters after each iteration.}
\item{logLikLower}{a vector of the lower bound of the estimated log-likelihood function after each iteration.}
\item{logLikUpper}{a vector of the upper bound of the estimated log-likelihood function after each iteration.}
\item{time}{a vector recorded the time elapsed after each iteration.}
}
\description{
This function finds the maximum penalised quasi likelihood estiamtes for mstil.
}
\details{
The control argument is a list that accepts the following components.
\describe{
\item{numLikSample}{a positive integer, represents the number of samples used to estimate the density and log-likelihood functions. By default 1e6. }
\item{conLevel}{a value between 0.5 and 1, represents the confidence level of the log-likelihood to be calculated. By default 0.95.}
\item{cvgN}{a positive interger. The algorithm stops when the estimated log-likelihood is not improved in cvgN iterations. By default 5.}
\item{lambdaPenalty}{a positive value, represents the L1 penalty coefficient for lambda. By default 0.}
\item{ainvPenalty}{a positive value, represents the L2 penalty coefficient for Ainv. By default 0.}
\item{maxit}{a positive integer, represents the maximum number iterations allowed. By default 0.}
\item{maxitOptim}{maximum number of iterations in optim. By default 10.}
\item{numGradSample}{a positive integer, represents the number of samples used to estimate the gradient. By default 1e4.}
\item{finDiffStep}{a positive value, represents the step size used to estimate gradient w.r.t. nu. By default 1e-5.}
\item{stepSgd}{a positive value, represents the step size to be used in the stochastic gradient step to optimise nu. By default 1e-2.}
\item{iterSgd}{a positive integer, represents the number of iterations to be used in the stochastic gradient step to optimise nu. By default 1e2.}
\item{dimRateSgd}{a positive value, represents the diminishing rate for step size to be used in the stochastic gradient step to optimise nu. By default 1e-2.}
\item{batchSize}{a positive integer, represents the batch sample size. By default n.}
}
}
\examples{
# Not run:
# data(RiverFlow)
# fit.mstil(as.matrix(log(RiverFlow)))
}
